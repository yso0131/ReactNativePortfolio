{"version":3,"sources":["../../src/commands/prebuild.ts"],"names":["actionAsync","projectDir","platform","options","npm","packageManager","platforms","Eject","clearNativeFolder","prebuildAsync","program","command","description","chalk","dim","longDescription","helpGroup","option","asyncActionProjectDir"],"mappings":";;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AACA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;AAEO,eAAeA,WAAf,CACLC,UADK,EAEL;AACEC,EAAAA,QADF;AAEE,KAAGC;AAFL,CAFK,EASL;AACA,MAAIA,OAAO,CAACC,GAAZ,EAAiB;AACfD,IAAAA,OAAO,CAACE,cAAR,GAAyB,KAAzB;AACD;;AAED,QAAMC,SAAS,GAAG,8CAAsBJ,QAAtB,CAAlB,CALA,CAOA;;AACA,QAAMK,KAAK,GAACC,iBAAN,CAAwBP,UAAxB,EAAoCK,SAApC,CAAN;AAEA,QAAMC,KAAK,GAACE,aAAN,CAAoBR,UAApB,EAAgC,EACpC,GAAGE,OADiC;AAEpCG,IAAAA;AAFoC,GAAhC,CAAN;AAID;;AAEc,kBAAUI,OAAV,EAA4B;AACzCA,EAAAA,OAAO,CACJC,OADH,CACW,iBADX,EAEGC,WAFH,CAGK,uFAAsFC,iBAAMC,GAAN,CACrF,+BAAU,wCAAV,CADqF,CAErF,EALN,EAOGC,eAPH,CAQI,kMARJ,EAUGC,SAVH,CAUa,OAVb,EAWGC,MAXH,CAWU,cAXV,EAW0B,6CAX1B,EAYGA,MAZH,CAYU,OAZV,EAYmB,uEAZnB,EAaGA,MAbH,CAaU,2BAbV,EAauC,oDAbvC,EAcGC,qBAdH,CAcyBlB,WAdzB;AAeD","sourcesContent":["import chalk from 'chalk';\nimport { Command } from 'commander';\n\nimport * as Eject from './eject/Eject';\nimport { platformsFromPlatform } from './eject/platformOptions';\nimport { learnMore } from './utils/TerminalLink';\n\nexport async function actionAsync(\n  projectDir: string,\n  {\n    platform,\n    ...options\n  }: Eject.EjectAsyncOptions & {\n    npm?: boolean;\n    platform?: string;\n  }\n) {\n  if (options.npm) {\n    options.packageManager = 'npm';\n  }\n\n  const platforms = platformsFromPlatform(platform);\n\n  // Clear the native folders before syncing\n  await Eject.clearNativeFolder(projectDir, platforms);\n\n  await Eject.prebuildAsync(projectDir, {\n    ...options,\n    platforms,\n  } as Eject.EjectAsyncOptions);\n}\n\nexport default function (program: Command) {\n  program\n    .command('prebuild [path]')\n    .description(\n      `Experimental: Create native iOS and Android project files before building natively. ${chalk.dim(\n        learnMore('https://docs.expo.io/bare/customizing/')\n      )}`\n    )\n    .longDescription(\n      'Generate the native iOS and Android projects for your app before building them. The generated code should not be modified directly, instead config plugins should be used to make modifications.'\n    )\n    .helpGroup('eject')\n    .option('--no-install', 'Skip installing npm packages and CocoaPods.')\n    .option('--npm', 'Use npm to install dependencies. (default when Yarn is not installed)')\n    .option('-p, --platform [platform]', 'Platforms to sync: ios, android, all. Default: all')\n    .asyncActionProjectDir(actionAsync);\n}\n"],"file":"prebuild.js"}