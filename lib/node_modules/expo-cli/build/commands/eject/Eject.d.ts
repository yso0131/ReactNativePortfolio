import { PackageJSONConfig } from '@expo/config';
import { ModPlatform } from '@expo/config-plugins';
declare type DependenciesMap = {
    [key: string]: string | number;
};
export declare type EjectAsyncOptions = {
    verbose?: boolean;
    force?: boolean;
    install?: boolean;
    packageManager?: 'npm' | 'yarn';
    platforms: ModPlatform[];
};
declare type PrebuildResults = {
    hasAssetBundlePatterns: boolean;
    legacyUpdates: boolean;
    hasNewProjectFiles: boolean;
    platforms: ModPlatform[];
    podInstall: boolean;
    nodeInstall: boolean;
    packageManager: string;
};
export declare function clearNativeFolder(projectRoot: string, folders: string[]): Promise<void>;
/**
 * Entry point into the eject process, delegates to other helpers to perform various steps.
 *
 * 1. Verify git is clean
 * 2. Prebuild the project
 * 3. Log project info
 */
export declare function ejectAsync(projectRoot: string, { platforms, ...options }: EjectAsyncOptions): Promise<void>;
export declare function ensureValidPlatforms(platforms: ModPlatform[]): ModPlatform[];
/**
 * Entry point into the prebuild process, delegates to other helpers to perform various steps.
 *
 * 1. Create native projects (ios, android)
 * 2. Install node modules
 * 3. Apply config to native projects
 * 4. Install CocoaPods
 */
export declare function prebuildAsync(projectRoot: string, { platforms, ...options }: EjectAsyncOptions): Promise<PrebuildResults>;
export declare function logNextSteps({ hasAssetBundlePatterns, hasNewProjectFiles, legacyUpdates, platforms, podInstall, nodeInstall, packageManager, }: PrebuildResults): void;
export declare function resolveBareEntryFile(projectRoot: string, main: any): string | null;
export declare function shouldDeleteMainField(main?: any): boolean;
export declare function hashForDependencyMap(deps: DependenciesMap): string;
export declare function getTargetPaths(projectRoot: string, pkg: PackageJSONConfig, platforms: ModPlatform[]): string[];
export declare function stripDashes(s: string): string;
/**
 * Returns true if the input string matches the default expo main field.
 *
 * - ./node_modules/expo/AppEntry
 * - ./node_modules/expo/AppEntry.js
 * - node_modules/expo/AppEntry.js
 * - expo/AppEntry.js
 * - expo/AppEntry
 *
 * @param input package.json main field
 */
export declare function isPkgMainExpoAppEntry(input?: string): boolean;
export {};
